openapi: 3.0.0

info:
  description: "This is API of the engine service of RNApdbee v3.0."
  version: "1.0.8"
  title: "RNApdbee Engine API"


tags:
  - name: "Calculations"
    description: "RNApdbee engine API which is able to perform sequential calculations"

servers:
  - url: '{protocol}://{URL}/api/v1/calculation'
    variables:
      port:
        enum:
          - '8080'
          - '8081'
        default: '8080'
      protocol:
        enum:
          - http
          - https
        default: http

paths:
  /3d/:
    post:
      tags:
        - "Calculations"
      summary: "Perform a 3D to Dot-Bracket calculation"
      description: ""
      parameters:
        - $ref: "#/components/parameters/modelSelection"
        - $ref: "#/components/parameters/analysisTool"
        - $ref: "#/components/parameters/nonCanonicalHandling"
        - $ref: "#/components/parameters/removeIsolated"
        - $ref: "#/components/parameters/structuralElementsHandling"
        - $ref: "#/components/parameters/visualizationTool"
        - $ref: "#/components/parameters/contentDispositionHeader"
      requestBody:
        description: ""
        required: true
        content:
          text/plain:
            schema:
              type: "string"
              example: "content of the file"
      responses:
        "400":
          description: "Bad request"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Output3D"

  /2d/:
    post:
      tags:
        - "Calculations"
      summary: "Perform a 2D to Dot-Bracket calculation"
      description: ""
      parameters:
        - $ref: "#/components/parameters/removeIsolated"
        - $ref: "#/components/parameters/structuralElementsHandling"
        - $ref: "#/components/parameters/visualizationTool"
        - $ref: "#/components/parameters/contentDispositionHeader"
      requestBody:
        description: ""
        required: true
        content:
          text/plain:
            schema:
              type: "string"
              example: "content of the file (in either dbn, ct or bpseq format)"
      responses:
        "400":
          description: "Bad request"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Output2D"

  /multi/:
    post:
      tags:
        - "Calculations"
      summary: "Perform a 3D to multi 2D calculation"
      description: ""
      parameters:
        - $ref: "#/components/parameters/modelSelection"
        - $ref: "#/components/parameters/includeNonCanonical"
        - $ref: "#/components/parameters/removeIsolated"
        - $ref: "#/components/parameters/visualizationTool"
        - $ref: "#/components/parameters/contentDispositionHeader"
      requestBody:
        description: ""
        required: true
        content:
          text/plain:
            schema:
              type: "string"
              example: "content of the file"
      responses:
        "400":
          description: "Bad request"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutputMulti"

components:
  parameters:
    modelSelection:
      in: query
      name: modelSelection
      required: true
      schema:
        type: "string"
        enum: [ "FIRST", "ALL" ]
    analysisTool:
      in: query
      name: analysisTool
      required: true
      schema:
        type: "string"
        enum:
          - "FR3D_PYTHON"
          - "BPNET"
          - "BARNABA"
          - "RNAVIEW"
          - "MC_ANNOTATE"
    nonCanonicalHandling:
      in: query
      name: nonCanonicalHandling
      required: true
      schema:
        type: "string"
        enum:
          - "VISUALIZATION_ONLY"
          - "TEXT_AND_VISUALIZATION"
          - "IGNORE"
    removeIsolated:
      in: query
      name: removeIsolated
      required: true
      schema:
        type: "boolean"
        enum: [ true, false ]
    includeNonCanonical:
      in: query
      name: includeNonCanonical
      required: true
      schema:
        type: "boolean"
        enum: [ true, false ]
    structuralElementsHandling:
      in: query
      name: structuralElementsHandling
      required: true
      schema:
        type: "string"
        enum: [ "USE_PSEUDOKNOTS", "IGNORE_PSEUDOKNOTS" ]
    visualizationTool:
      in: query
      name: visualizationTool
      required: true
      schema:
        type: "string"
        enum: [ "VARNA", "PSEUDO_VIEWER", "R_CHIE", "RNA_GLIB", "FORNA", "RNA_PUZZLER", "RNA_TURTLE", "RNA_TRAVELER", "BARNABA", "NONE" ]
    contentDispositionHeader:
      in: header
      name: Content-Disposition
      required: true
      schema:
        type: string
        description: Used only with `application/pdf` responses
        example: attachment; filename="name.pdf"

  schemas:
    Output3D:
      type: object
      properties:
        analysisOutput:
          $ref: "#/components/schemas/AnalysisOutput"
        output2D:
          $ref: "#/components/schemas/Output2D"
      required:
        - analysisOutput
        - output2D

    OutputMulti:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: "#/components/schemas/OutputMultiEntry"
      required:
        - entries

    OutputMultiEntry:
      type: "object"
      properties:
        output2D:
          $ref: "#/components/schemas/Output2D"
        consensusVisualization:
          $ref: "#/components/schemas/ConsensusVisualization"
      required:
        - "output2D"
        - "consensusVisualization"

    Output2DEntry:
      type: "object"
      properties:
        strands:
          $ref: "#/components/schemas/DotBracket"
        bpSeq:
          $ref: "#/components/schemas/BPSEQ"
        ct:
          $ref: "#/components/schemas/CT"
        interactions:
          $ref: "#/components/schemas/Interactions"
        structuralElements:
          $ref: "#/components/schemas/StructuralElements"
        imageInformation:
          $ref: "#/components/schemas/ImageInformation"
      required:
        - "strands"
        - "bpSeq"
        - "ct"
        - "interactions"
        - "structuralElements"
        - "imageInformation"

    ConsensusVisualization:
      type: "object"
      properties:
        pathToPngImage:
          type: "string"
          example: "/resources/tmp/RNApdbee5553721596686458067.png"
        pathToSvgImage:
          type: "string"
          example: "/resources/tmp/RNApdbee5553721596686458067.svg"

    Output2D:
      type: "object"
      description: "Output2D object has currently list of Output2DEntry, which has always length of 1. Will be refactored in further version of API."
      properties:
        analysis:
          type: "array"
          items:
            $ref: "#/components/schemas/Output2DEntry"
      required:
        - "analysis"

    ImageInformation:
      type: "object"
      properties:
        pathToPNGImage:
          type: "string"
          example: "/resources/tmp/RNApdbee7525567015472955018.png"
        pathToSVGImage:
          type: "string"
          example: "/resources/tmp/RNApdbee2052380807386422791.svg"
        successfulDrawer:
          $ref: "#/components/schemas/VisualizationTool"
        failedDrawer:
          $ref: "#/components/schemas/VisualizationTool"

    BPSEQ:
      type: "array"
      items:
        type: "string"
        example: "1 G 0"

    CT:
      type: "array"
      items:
        type: "string"
        example: "1 G 0 2 0 1"

    Interactions:
      type: "array"
      items:
        type: "string"
        example: "A.A181 - Z.U418"

    DotBracket:
      type: "array"
      items:
        $ref: "#/components/schemas/StrandEntry"

    StrandEntry:
      type: "object"
      properties:
        name:
          type: "string"
          example: "A"
        sequence:
          type: "string"
          example: "uGUUAUUUU"
        structure:
          type: "string"
          example: ".]]]]]..."

    StructuralElements:
      type: "object"
      properties:
        stems:
          $ref: "#/components/schemas/StructuralElementsArray"
        loops:
          $ref: "#/components/schemas/StructuralElementsArray"
        singleStrands:
          $ref: "#/components/schemas/StructuralElementsArray"
        singleStrands5p:
          $ref: "#/components/schemas/StructuralElementsArray"
        singleStrands3p:
          $ref: "#/components/schemas/StructuralElementsArray"

    StructuralElementsArray:
      type: "array"
      items:
        type: "string"
        example: "6 10 CCCGG ((((( YYYRR 262 266 CCGGG ))))) YYRRR"

    AnalysisOutput:
      type: object
      properties:
        basePairs:
          type: array
          items:
            $ref: "#/components/schemas/BasePair"
        stackings:
          type: array
          items:
            $ref: "#/components/schemas/Stacking"
        baseRiboseInteractions:
          type: array
          items:
            $ref: "#/components/schemas/BaseRibose"
        basePhosphateInteractions:
          type: array
          items:
            $ref: "#/components/schemas/BasePhosphate"
        other:
          type: array
          items:
            $ref: "#/components/schemas/Other"
      required:
        - basePairs
        - stackings
        - baseRiboseInteractions
        - basePhosphateInteractions
        - other

    BasePair:
      type: object
      properties:
        nt1:
          $ref: "#/components/schemas/Residue"
        nt2:
          $ref: "#/components/schemas/Residue"
        leontisWesthof:
          $ref: "#/components/schemas/LeontisWesthof"
        saenger:
          $ref: "#/components/schemas/Saenger"
      required:
        - leontisWesthof
        - nt1
        - nt2

    BaseRibose:
      type: object
      properties:
        nt1:
          $ref: "#/components/schemas/Residue"
        nt2:
          $ref: "#/components/schemas/Residue"
        br:
          $ref: "#/components/schemas/BR"
      required:
        - nt1
        - nt2

    BasePhosphate:
      type: object
      properties:
        nt1:
          $ref: "#/components/schemas/Residue"
        nt2:
          $ref: "#/components/schemas/Residue"
        bph:
          $ref: "#/components/schemas/BPh"
      required:
        - nt1
        - nt2

    Stacking:
      type: object
      properties:
        nt1:
          $ref: "#/components/schemas/Residue"
        nt2:
          $ref: "#/components/schemas/Residue"
        topology:
          $ref: "#/components/schemas/StackingTopology"
      required:
        - nt1
        - nt2

    Other:
      type: object
      properties:
        nt1:
          $ref: "#/components/schemas/Residue"
        nt2:
          $ref: "#/components/schemas/Residue"
      required:
        - nt1
        - nt2

    Residue:
      type: object
      properties:
        label:
          $ref: "#/components/schemas/ResidueLabel"
        auth:
          $ref: "#/components/schemas/ResidueAuth"
        atoms:
          type: array
          items:
            $ref: "#/components/schemas/Atom"
      required:
        - atoms

    Atom:
      type: object

    ResidueAuth:
      type: object
      properties:
        chain:
          type: string
        number:
          type: integer
        icode:
          type: string
        name:
          type: string
      required:
        - chain
        - number
        - icode
        - name

    ResidueLabel:
      type: object
      properties:
        chain:
          type: string
        number:
          type: integer
        name:
          type: string
      required:
        - chain
        - number
        - name

    LeontisWesthof:
      type: "string"
      enum:
        - "cWW"
        - "cWH"
        - "cWS"
        - "cHW"
        - "cHH"
        - "cHS"
        - "cSW"
        - "cSH"
        - "cSS"
        - "tWW"
        - "tWH"
        - "tWS"
        - "tHW"
        - "tHH"
        - "tHS"
        - "tSW"
        - "tSH"
        - "tSS"

    Saenger:
      type: "string"
      enum:
        - "I"
        - "II"
        - "III"
        - "IV"
        - "V"
        - "VI"
        - "VII"
        - "VIII"
        - "IX"
        - "X"
        - "XI"
        - "XII"
        - "XIII"
        - "XIV"
        - "XV"
        - "XVI"
        - "XVII"
        - "XVIII"
        - "XIX"
        - "XX"
        - "XXI"
        - "XXII"
        - "XXIII"
        - "XXIV"
        - "XXV"
        - "XXVI"
        - "XXVII"
        - "XXVIII"

    BR:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9

    BPh:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9

    StackingTopology:
      type: string
      enum:
        - upward
        - downward
        - inward
        - outward

    VisualizationTool:
      type: "string"
      enum: [ "VARNA", "PSEUDO_VIEWER", "R_CHIE", "RNA_GLIB", "FORNA", "RNA_PUZZLER", "RNA_TURTLE", "RNA_TRAVELER", "BARNABA", "NONE" ]

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
